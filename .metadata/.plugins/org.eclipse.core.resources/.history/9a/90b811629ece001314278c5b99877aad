package kr.android.gallery;

import java.io.File;
import java.io.FileOutputStream;

import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore.Images;
import android.support.v7.app.ActionBarActivity;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

public class MainActivity extends ActionBarActivity implements OnClickListener{	
	
	ImageView ivPhoto;
	TextView tvFileInfo;
	Button btnPhotoSelect;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		ivPhoto = (ImageView)findViewById(R.id.ivPhoto);
		tvFileInfo = (TextView)findViewById(R.id.tvFileInfo);
		btnPhotoSelect = (Button)findViewById(R.id.btnPhotoSelect);
		//버튼을 이벤트 리스너와 연결
		btnPhotoSelect.setOnClickListener(this);

		
	}

	@Override
	public void onClick(View v) {
		// 갤러리를 호출해서 휴대폰에 저장된 이미지를 읽어들임
		Intent intent = new Intent();
		//여러 리소스들의 목록들을 ACTI ON_GET_CONTENT 값 가져올 수 있도록 설정
		intent.setAction(Intent.ACTION_GET_CONTENT);
		//image/jpeg, image/png, image/gif등 이미지파일을 타입으로 지정
		intent.setType("image/*");
		startActivityForResult(intent, 0);		
	}
	
	//Activity호출해서 만들어진 데이터를 전달받는 메소드
		@Override
		public void onActivityResult(int requestCode, int resultCode, Intent data){
			super.onActivityResult(requestCode, resultCode, data);
			
			if(data!=null){
				FileOutputStream fileOutputStream =null;
				try{
					Uri uri = data.getData();
					//이미지 뷰에 이미지 보여주기
														//getContentResolver( )가 매개역할을 하여 데이터를 호출할 수 있도록 해주는 객체
					Bitmap image = Images.Media.getBitmap(getContentResolver(), uri);
					ivPhoto.setImageBitmap(image);
					ivPhoto.setVisibility(View.VISIBLE);
					
					//이미지 정보 추출 및 표시
					tvFileInfo.setText("========이미지 정보===========\n");
					tvFileInfo.append("URI: " + uri.toString()+"\n");
					tvFileInfo.append("Last Path Segemnt: "+uri.getLastPathSegment()+"\n");
					
					Cursor cursor = getContentResolver().query(Images.Media.EXTERNAL_CONTENT_URI, null, Images.Media._ID+"=?", new String[]{uri.getLastPathSegment()}, null);
					if(cursor.moveToFirst()){
						String imagePath = cursor.getString(cursor.getColumnIndexOrThrow(Images.Media.DATA));
						tvFileInfo.append("원본이미지경로: "+imagePath + "\n");
						File file = new File(imagePath);
						tvFileInfo.append("이미지 용량: " + file.length()+"\n");
					}
					tvFileInfo.append("크기: " + image.getWidth() + "*" + image.getHeight());
					
					tvFileInfo.setVisibility(View.VISIBLE);
					
				}catch(Exception e){
					
				}finally{
					
				}
			}
		}	

}
